Video lesson 43.
    All the animation goes in a CSS class that is composed for all the proprieties below.
    Animations with CSS;
        Stages to animate a CSS element - keyframes.
        Keyframes:
            they are the frames of an animation;
            moments of our animation. 

        Transform proprieties:
            Is the animation's transformation of a frame for another frame;
            define the changes of every break.
            Transition:
                It's a way of modify the transform settings, smoothing the animations, by example;
                It's basic the configuration of the transition.

        Animation:
            Propriety that applies in a div the animation that we want;
            stores the keyframes, transform and transition proprieties.
            Addclass:
                A CSS class that stores all the animation.

Video lesson 44 and 45.
    Transition:
        Allows define what we want that change in the animation;
        example:
            transition: all; --> All the proprieties of the animation will affect the element;
            transition: width; --> Just the width will be affected in the transition. 
        example 2:
            transition: all 3s ease-in; --> First he defines the elements that will be affected, after defines the animation duration and finally defines the animation effect; 
        Animation: | name | | duration | | play-state |;

Video lesson 46.
    You can separate the keyframes accordind to the % value that is relationed with the animation's duration;
    Transform:
        translate( valueX, valueY ); --> animate movement;
        rotate( 180deg ); --> rotation;
        scale( valueX, valueY ); --> 
        skewX( 20deg )
        skewY( 20deg )
        matrix ( scaleX,skewY(),skewX(),scaleY(),translateX(),translateY() )
        --------------------------------------------------------------------
        translate3d( valueX, valueY, valueZ );
        rotate3d( 180deg );
        scale3d( valueX, valueY, valueZ, 90deg );
        matrix (n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n);

    