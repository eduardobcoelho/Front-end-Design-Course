Video lessons 26.
Layout web: 
    The structure and form that the site will present your content visually. This content's organization on the screen must be built in a way that consider a good experience to the user, facilitating the interation between user and interface in computers and mobile devices(responsive layout), and also enable an easy compreehension of the elements distributed on the layout (button, forms, texts, images, videos, etc).)

Layout types:
    Fixed: it has fixed measures to your layout's elements, indepedent of screen's resolution.
    Fluid: the elements has measures that is defined with a percent value (%) that vary according to the screen's width and height. The fluid layout doesn't consider the device screen's resolution.
    Responsive: the elements are resized and grouped of differents ways according to the screen's resolution, making that the navegation experience be optimized to every resolution.
    Organic: it doesn't exist a fixed grid and the elements are scattered of an organic way around the layout, so that every page has a different diagramation without be limited to columns.
    Material: it's a layout concept introduced by Google, where the main concept consists in explore the layout based in the printed materials design, where the three-dimensional space is worked from the relation between light, shadow and moviment using three dimensions (axes X, Y e Z).

Video lessons 27.
Controlling the responsivity of your interface with Media Queries.
Media Queries:
    It's a CSS's module that allows us to determine specifics styles of a HTML for determinated media. Also allows us to define a break or a starting point (breakpoint) for that a styles set can be aplicated to a HTML element.

How to use:
    @media only screen and (min-width: 554px) {
        .aleatory-class {

        }

    } --> The css gonna function when the width is bigger or equal to 554px. In this case, 554px is the breakpoint

    @media only screen and (min-width: 992px) {
        .aleatory-class {
            
        }
    }

Video lessons 28.
Just demonstration of how to use Media Queries.

Video lessons 29.
    Introduction to gryd systems and CSS frameworks.

Video lessons 30.
    Grids:
        It's a layout structuring of web pages.
        Grids isn't a must for sites development, but the use a grid system helps to mantain consistency of the aligment of page's elements, organize the interface's elements, also facilitate the front-end development and helps other webdesigners that can work later in the same project.

    Frameworks and GRIDS CSS:
        The framework that will be used in this project is the Bootstrap; https://getbootstrap.com/docs/3.4/css/
        The grid system divides our layout's width in 12 columns.
        It isn't a must the use of all the 12 columns, you can use less or more. 

    How it works?
        The parts of a grid system is represented by a div with a class that has a default: col-sm-6 ; col-md-5 ; col-lg-6
        Basically you have the "col" that is "column", "sm" "md" or "lg" that is the view - so, you have the small, medium and large - and the number "1<=x<=12" that represents the number of columns that the div will occupy.
        The bootstrap default breakpoint says that when the prefix was .col- (0px<x<576px); .col-sm-(576px<x<768); .col-md-(768px<x<992); .col-lg-(992px<x<1200); .col-xl-(1200px<=x).

Video lessons 31.
    The bootstrap says that the columns has to be inside a row and, if possible, inside of a container.
    class = "container-fluid" occupy all the width.
    When the sum of the column's values doesn't result in 12, it's recommended that you use in the div class row the justify-content-center (class="row justify-content-center"). With this, the elements of the container and row elements will be alligned at the center. 

Video lessons 32.
    
